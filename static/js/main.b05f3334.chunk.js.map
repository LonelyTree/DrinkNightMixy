{"version":3,"sources":["img/paintStroke.png","components/menu/styles.js","components/menu/index.jsx","components/randomDrink/styles.js","components/randomDrink/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexDirection","justifyContent","alignItems","width","background","paddingBottom","margin","boxShadow","title","fontFamily","color","fontSize","textAlign","paper","padding","spacing","palette","text","secondary","nav","borderRadius","icon","Menu","React","useState","value","setValue","classes","Grid","container","className","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","style","onClick","window","location","reload","flexGrow","loading","height","marginTop","titleContainer","textShadow","backgroundImage","PaintStroke","backgroundSize","backgroundPosition","itemTitle","descContainer","marginBottom","desc","img","ingredients","item","RANDOM_DRINK","gql","client","ApolloClient","uri","App","query","error","data","mappedIngredients","getRandomDrink","map","ingredient","Paper","key","mappedAmounts","measurement","measure","id","name","src","RandomDrink","Boolean","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b05f3334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paintStroke.145b0f23.png\";","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\twidth: '100%',\n\t\tbackground: 'black',\n\t\tpaddingBottom: '2em',\n\t\tmargin: '0 auto',\n\t\tboxShadow: '0 0 10px black',\n\t},\n\ttitle: {\n\t\tfontFamily: 'Permanent Marker',\n\t\tcolor: '#ff385b',\n\t\tfontSize: '3em',\n\t\ttextAlign: 'center',\n\t},\n\n\tpaper: {\n\t\tpadding: theme.spacing(1),\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.text.secondary,\n\t},\n\tnav: {\n\t\tjustifyContent: 'space-around',\n\t\tborderRadius: '2em',\n\t\tpadding: '1em',\n\t},\n\ticon: {\n\t\tcolor: 'black',\n\t},\n}))\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport LocalBarIcon from '@material-ui/icons/LocalBar'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport { useStyles } from './styles'\n\nexport default function Menu() {\n\tconst [value, setValue] = React.useState(0)\n\tconst classes = useStyles()\n\tfunction refreshPage() {\n\t\twindow.location.reload()\n\t}\n\treturn (\n\t\t<Grid container spacing={1} className={classes.root}>\n\t\t\t<h1 className={classes.title}>PARTY NIGHT MIXY</h1>\n\t\t\t<BottomNavigation\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\tsetValue(newValue)\n\t\t\t\t}}\n\t\t\t\tshowLabels\n\t\t\t\tclassName={classes.nav}\n\t\t\t>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tclassName={classes.icon}\n\t\t\t\t\tlabel='Random Drink'\n\t\t\t\t\ticon={<LocalBarIcon style={{ color: '#ff385b' }} />}\n\t\t\t\t\tonClick={refreshPage}\n\t\t\t\t/>\n\t\t\t</BottomNavigation>\n\t\t</Grid>\n\t)\n}\n","import { makeStyles, withTheme } from '@material-ui/core/styles'\nimport PaintStroke from '../../img/paintStroke.png'\nexport const useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tbackground: 'black',\n\t\tboxShadow: '0 0 10px black',\n\t},\n\tloading: {\n\t\tbackground: 'black',\n\t\tcolor: 'White',\n\t\tfontFamily: 'Permanent Marker',\n\t\twidth: '100vw',\n\t\theight: '100vh',\n\t\tmarginTop: '-1vw',\n\t\ttextAlign: 'center',\n\t\tfontSize: '3em',\n\t},\n\ttitleContainer: { width: '100%' },\n\ttitle: {\n\t\tcolor: 'white',\n\t\tpadding: theme.spacing(10),\n\t\ttextAlign: 'center',\n\t\tfontSize: '3em',\n\t\ttextShadow: '0 0 1em black',\n\t\tmargin: '0 auto',\n\t\tfontFamily: 'Permanent Marker',\n\t\tbackgroundImage: `url(${PaintStroke})`,\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundPosition: 'center',\n\t},\n\titemTitle: {\n\t\tfontSize: '100%',\n\t\tcolor: 'white',\n\t\tfontFamily: 'Permanent Marker',\n\t},\n\tdescContainer: {\n\t\talignItems: 'center',\n\t\tmarginBottom: '2em',\n\t},\n\tdesc: {\n\t\tfontFamily: 'Permanent Marker',\n\t\tcolor: 'white',\n\t\tfontSize: '1.5em',\n\t\tpadding: '.5em',\n\t\twidth: '90%',\n\t\tmargin: '0 auto',\n\t},\n\timg: {\n\t\tjustifyContent: 'center',\n\t\twidth: '100%',\n\t\tmargin: '0 auto',\n\t\tboxShadow: '0 0 1em black',\n\t},\n\tingredients: {\n\t\tjustifyContent: 'space-around',\n\t\tmarginBottom: '1em',\n\t\twidth: '100%',\n\t},\n\titem: {\n\t\tpadding: '1em',\n\t\tmarginBottom: '10px',\n\t},\n}))\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport { useStyles } from './styles'\n\nconst RANDOM_DRINK = gql`\n\tquery {\n\t\tgetRandomDrink {\n\t\t\tdesc\n\t\t\tname\n\t\t\tid\n\t\t\timg\n\t\t\tingredients\n\t\t\tmeasurement\n\t\t}\n\t}\n`\nexport function RandomDrink() {\n\tconst classes = useStyles()\n\treturn (\n\t\t<Query query={RANDOM_DRINK}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return <p className={classes.loading}>Loading...</p>\n\t\t\t\tif (error) return <p>Error :(</p>\n\t\t\t\tconst mappedIngredients = data.getRandomDrink.ingredients.map(\n\t\t\t\t\t(ingredient) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Paper key={ingredient} className={classes.item}>\n\t\t\t\t\t\t\t\t{ingredient}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tconst mappedAmounts = data.getRandomDrink.measurement.map((measure) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Paper key={measure} className={classes.item}>\n\t\t\t\t\t\t\t{measure}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t)\n\t\t\t\t})\n\n\t\t\t\treturn (\n\t\t\t\t\t<Grid container id={data.getRandomDrink.id} className={classes.root}>\n\t\t\t\t\t\t<Grid item className={classes.titleContainer}>\n\t\t\t\t\t\t\t<div className={classes.title}>{data.getRandomDrink.name}</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item className={classes.descContainer}>\n\t\t\t\t\t\t\t<div className={classes.desc}>{data.getRandomDrink.desc}</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<img src={`${data.getRandomDrink.img}`} className={classes.img} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container item className={classes.ingredients}>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<h1 className={classes.itemTitle}>INGREDIENTS</h1>\n\t\t\t\t\t\t\t\t{mappedIngredients}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<h1 className={classes.itemTitle}>AMOUNT</h1>\n\t\t\t\t\t\t\t\t{mappedAmounts}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}\n","import React from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport Menu from './components/menu'\nimport { RandomDrink } from './components/randomDrink'\n\nconst client = new ApolloClient({\n\turi: 'https://mixy-apollo-server.herokuapp.com/',\n})\n\n//TODO:\n// 1. Query ingredients - X\n// 2. Create full drink page -X\n// 3. Media Queries for responsive design -\n// 4. Cosmetic design of website -\n// 5. Ship -\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<div className='App'>\n\t\t\t\t<Menu />\n\t\t\t\t{RandomDrink()}\n\t\t\t</div>\n\t\t</ApolloProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CssBaseline />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}